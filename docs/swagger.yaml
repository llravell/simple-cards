basePath: /
definitions:
  auth.authRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  cards.createOrUpdateCardRequest:
    properties:
      meaning:
        type: string
      term:
        type: string
    type: object
  entity.Card:
    properties:
      meaning:
        type: string
      module_uuid:
        type: string
      term:
        type: string
      uuid:
        type: string
    type: object
  entity.Module:
    properties:
      name:
        type: string
      user_uuid:
        type: string
      uuid:
        type: string
    type: object
  entity.ModuleWithCards:
    properties:
      cards:
        items:
          $ref: '#/definitions/entity.Card'
        type: array
      name:
        type: string
      user_uuid:
        type: string
      uuid:
        type: string
    type: object
  modules.createOrUpdateModuleRequest:
    properties:
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Simple Cards API
  version: "1.0"
paths:
  /api/modules/:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Module'
            type: array
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get all user's modules
      tags:
      - modules
    post:
      consumes:
      - application/json
      parameters:
      - description: Module params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/modules.createOrUpdateModuleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Module'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create new module
      tags:
      - modules
  /api/modules/{module_uuid}/:
    delete:
      parameters:
      - description: Module UUID
        in: path
        name: module_uuid
        required: true
        type: string
      responses:
        "202":
          description: Accepted
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete module
      tags:
      - modules
    get:
      parameters:
      - description: Module UUID
        in: path
        name: module_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ModuleWithCards'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get module with cards
      tags:
      - modules
    put:
      consumes:
      - application/json
      parameters:
      - description: Module UUID
        in: path
        name: module_uuid
        required: true
        type: string
      - description: Module params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/modules.createOrUpdateModuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Module'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update module
      tags:
      - modules
  /api/modules/{module_uuid}/cards/:
    get:
      parameters:
      - description: Module UUID
        in: path
        name: module_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Card'
            type: array
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get all module's cards
      tags:
      - cards
    post:
      consumes:
      - application/json
      parameters:
      - description: Card params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cards.createOrUpdateCardRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Card'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Add new card to module
      tags:
      - cards
  /api/modules/{module_uuid}/cards/{card_uuid}:
    delete:
      parameters:
      - description: Module UUID
        in: path
        name: module_uuid
        required: true
        type: string
      - description: Card UUID
        in: path
        name: card_uuid
        required: true
        type: string
      responses:
        "202":
          description: Accepted
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete card
      tags:
      - cards
    put:
      consumes:
      - application/json
      parameters:
      - description: Module UUID
        in: path
        name: module_uuid
        required: true
        type: string
      - description: Card UUID
        in: path
        name: card_uuid
        required: true
        type: string
      - description: Card params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cards.createOrUpdateCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Card'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update card
      tags:
      - cards
  /api/user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User creds
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.authRequest'
      responses:
        "200":
          description: OK
        "400":
          description: invalid data
        "401":
          description: verification failed
        "500":
          description: token building error
      summary: Verify user creds and login
      tags:
      - auth
  /api/user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User creds
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.authRequest'
      responses:
        "200":
          description: OK
        "400":
          description: invalid data
        "409":
          description: user with same login already exists
        "500":
          description: token building error
      summary: Register new user
      tags:
      - auth
  /ping:
    get:
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Check database connection
      tags:
      - health
swagger: "2.0"
